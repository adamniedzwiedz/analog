<UserControl x:Class="Views.Modules.LogVisualizerView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:Views.Modules"
             xmlns:dd="urn:gong-wpf-dragdrop"
             xmlns:cal="http://www.caliburnproject.org"
             xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
             xmlns:behaviors="clr-namespace:Views.Behaviors"
             xmlns:avalonedit="http://icsharpcode.net/sharpdevelop/avalonedit"
             xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
             xmlns:modules="clr-namespace:ViewModels.Modules;assembly=ViewModels"
             mc:Ignorable="d" 
             d:DataContext="{d:DesignInstance Type=modules:LogVisualizerViewModel, IsDesignTimeCreatable=False}"

             d:DesignHeight="300" d:DesignWidth="300">
    <Grid>
        <avalonedit:TextEditor           
                Name="TextEditor"
                FontFamily="Consolas"
                IsReadOnly="True"
                FontSize="10pt" 
               
                HorizontalScrollBarVisibility="Auto"
                VerticalScrollBarVisibility="Auto"
                ShowLineNumbers="True"
                cal:Message.Attach="[Gesture Ctrl+H] = [HideSelected];[Gesture Shift+Ctrl+H] = [ShowOnlySelected]"
                Document="{Binding Document}"
                Background="{x:Null}">

            <i:Interaction.Behaviors>
                <behaviors:FoldingBehavior Foldings="{Binding Foldings}" Collapse="True" />
                <behaviors:LineTransformersBehavior LineTransformers="{Binding LineTransformers.Transformers}"  />
                <behaviors:SearchBehavior />
                <!--<b:ElementGeneratorsBehavior ElementGenerators="{Binding ElementGenerators}" />-->
                <behaviors:SelectionBehavior Selection="{Binding Selection, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, Delay=100}" />
            </i:Interaction.Behaviors>

            <avalonedit:TextEditor.ContextMenu>
                <ContextMenu ItemsSource="{Binding ContextMenuExtensions}">
                    <ContextMenu.ItemContainerStyle>
                        <Style TargetType="{x:Type MenuItem}" BasedOn="{StaticResource MaterialDesignMenuItem}">
                            <Setter Property="Header" Value="{Binding Header}" />
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding Type}" Value="{x:Static modules:ContextItemType.Separator}">
                                    <DataTrigger.Setters>
                                        <Setter Property="Template">
                                            <Setter.Value>
                                                <ControlTemplate>
                                                    <Separator Style="{StaticResource MaterialDesignSeparator}" />
                                                </ControlTemplate>
                                            </Setter.Value>
                                        </Setter>
                                    </DataTrigger.Setters>
                                </DataTrigger>
                                <DataTrigger Binding="{Binding Type}" Value="{x:Static modules:ContextItemType.MenuItem}">
                                    <DataTrigger.Setters>
                                        <Setter Property="cal:Message.Attach" Value="[Event Click] = [Action Action()]"></Setter>
                                        <Setter Property="Icon">
                                            <Setter.Value>
                                                <materialDesign:PackIcon Kind="{Binding Icon}"  />
                                            </Setter.Value>
                                        </Setter>
                                    </DataTrigger.Setters>
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </ContextMenu.ItemContainerStyle>
                    <!--<MenuItem cal:Message.Attach="ShowBeforeSelected()" Visibility="{Binding IsSelectionContextMenuActive, Converter={StaticResource BooleanToVisibilityConverter}}" Header="Show only logs before"/>
                    <MenuItem cal:Message.Attach="ShowAfterSelected" Visibility="{Binding IsSelectionContextMenuActive, Converter={StaticResource BooleanToVisibilityConverter}}" Header="Show only logs after"/>
                    <Separator  Visibility="{Binding IsSelectionContextMenuActive, Converter={StaticResource BooleanToVisibilityConverter}}" />
                    <MenuItem InputGestureText="Shift+Ctrl+H" cal:Message.Attach="ShowOnlySelected" Visibility="{Binding IsSelectionContextMenuActive, Converter={StaticResource BooleanToVisibilityConverter}}" Header="Show only logs with selection"/>
                    <MenuItem InputGestureText="Ctrl+H" cal:Message.Attach="HideSelected" Visibility="{Binding IsSelectionContextMenuActive, Converter={StaticResource BooleanToVisibilityConverter}}" Header="Hide logs with selection"/>-->
                </ContextMenu>
            </avalonedit:TextEditor.ContextMenu>

            <avalonedit:TextEditor.Resources>
                <Style TargetType="avalonedit:SearchPanel" BasedOn="{StaticResource {x:Type avalonedit:SearchPanel}}">
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate>
                                <materialDesign:ColorZone FocusManager.FocusedElement="{Binding ElementName=SearchTextField}" 
                                    MinWidth="250" MaxWidth="350" Padding="8 4 3 8" Margin="0 0 5 0" Mode="PrimaryMid" HorizontalAlignment="Right" VerticalAlignment="Top">

                                    <Grid>
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="Auto" />
                                            <ColumnDefinition Width="*" />
                                            <ColumnDefinition Width="Auto" />
                                        </Grid.ColumnDefinitions>
                                        <materialDesign:PopupBox StaysOpen="True">
                                            <materialDesign:PopupBox.ToggleContent>
                                                <materialDesign:PackIcon Kind="Plus" Foreground="White" />
                                            </materialDesign:PopupBox.ToggleContent>
                                            <StackPanel>
                                                <MenuItem IsCheckable="True"  Header="Match case" IsChecked="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=MatchCase, Mode=TwoWay}" />
                                                <MenuItem IsCheckable="True"  Header="Match whole words" IsChecked="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=WholeWords, Mode=TwoWay}" />
                                                <MenuItem IsCheckable="True" Header="Use Regex" IsChecked="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=UseRegex, Mode=TwoWay}" />
                                            </StackPanel>
                                        </materialDesign:PopupBox>
                                        <TextBox Name="PART_searchTextBox" Margin="3 0 0 0"
                                        Text="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=SearchPattern, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, Delay=200}"
                                             materialDesign:TextFieldAssist.DecorationVisibility="Collapsed" 
                                             CaretBrush="White" Grid.Column="1" />
                                        <StackPanel Orientation="Horizontal" Grid.Column="2">
                                            <Button DataContext="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=.}" cal:Message.Attach="FindPrevious()" ToolTip="Find previous (Shift+F3)" Style="{DynamicResource BottomPanelFlatButton}" >
                                                <materialDesign:PackIcon Kind="ArrowLeft" />
                                            </Button>
                                            <Button Margin="5 0 0 0" DataContext="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=.}" cal:Message.Attach="FindNext()" ToolTip="Find previous (Shift+F3)" Style="{DynamicResource BottomPanelFlatButton}" >
                                                <materialDesign:PackIcon Kind="ArrowRight" />
                                            </Button>
                                            <Button Style="{DynamicResource BottomPanelFlatButton}" 
                                                    VerticalAlignment="Top" 
                                                    Margin="4 0 0 0" 
                                                    Padding="3 1"
                                                    DataContext="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=.}" 
                                                    cal:Message.Attach="Close()" >
                                                <materialDesign:PackIcon Kind="Close" Width="12" Height="12" />
                                            </Button>
                                        </StackPanel>
                                    </Grid>
                                </materialDesign:ColorZone>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </Style>
            </avalonedit:TextEditor.Resources>
        </avalonedit:TextEditor>
    </Grid>
</UserControl>
